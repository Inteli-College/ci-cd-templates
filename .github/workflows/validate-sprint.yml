name: Validate Sprint - Configur√°vel

on:
  workflow_call:
    inputs:
      config_path:
        description: 'Caminho para o arquivo de configura√ß√£o YAML'
        required: false
        type: string
        default: 'cursos/sistemas-informacao/M07/config/validation-config.yml'
      module:
        description: 'M√≥dulo a ser validado (M01-M12)'
        required: false
        type: string
        default: 'M07'
      course:
        description: 'Curso a ser validado'
        required: false
        type: string
        default: 'sistemas-informacao'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo do reposit√≥rio atual
        uses: actions/checkout@v3
        
      - name: Checkout dos templates CI/CD
        uses: actions/checkout@v3
        with:
          repository: Inteli-College/ci-cd-templates
          path: ci-cd-templates

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: List full directory tree
        run: tree -a || find . -type d -name ".git" -prune -o -print | sed 's|[^/]*/|  |g'

      - name: Instalar depend√™ncias
        run: pip install -r ci-cd-templates/shared/requirements.txt

      - name: Verificar arquivo de configura√ß√£o
        run: |
          cd ci-cd-templates
          CONFIG_PATH="${{ inputs.config_path }}"
          echo "üìã Usando configura√ß√£o: $CONFIG_PATH"
          
          if [ ! -f "$CONFIG_PATH" ]; then
            echo "‚ùå Arquivo de configura√ß√£o n√£o encontrado: $CONFIG_PATH"
            echo "üîß Criando configura√ß√£o padr√£o para ${{ inputs.course }}/${{ inputs.module }}"
            
            # Criar configura√ß√£o usando template se n√£o existir
            mkdir -p $(dirname "$CONFIG_PATH")
            PYTHONPATH=. python shared/utils/create_default_config.py "$CONFIG_PATH" "${{ inputs.course }}" "${{ inputs.module }}"
          else
            echo "‚úÖ Arquivo de configura√ß√£o encontrado"
          fi

      - name: Executar valida√ß√µes configur√°veis
        run: |
          cd ci-cd-templates
          PYTHONPATH=. VALIDATION_CONFIG="${{ inputs.config_path }}" python cursos/sistemas-informacao/M07/scripts/validation_engine.py

      - name: Postar resultado no Slack (se configurado)
        if: always()
        run: |
          cd ci-cd-templates
          echo "üì¢ Enviando notifica√ß√£o para o Slack (se configurado)"
          PYTHONPATH=. VALIDATION_CONFIG="${{ inputs.config_path }}" python shared/post_slack.py
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
